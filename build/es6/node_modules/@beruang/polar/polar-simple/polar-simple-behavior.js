/**
@license
Copyright (c) 2019 The Beruang Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
https://github.com/DatatransInformatika/beruang/blob/master/LICENSE.txt The complete set of authors may be found at
https://github.com/DatatransInformatika/beruang/blob/master/AUTHORS.txt The complete set of contributors may be
found at https://github.com/DatatransInformatika/beruang/blob/master/CONTRIBUTORS.txt
*/import{dedupingMixin}from"../../../@polymer/polymer/lib/utils/mixin.js";import{FlattenedNodesObserver}from"../../../@polymer/polymer/lib/utils/flattened-nodes-observer.js";/**
`PolarSimpleBehavior`
@polymerBehavior PolarSimpleBehavior
*/let internalPolarSimpleBehavior=base=>class extends base{static get properties(){return{/** Child elements are packed toward the start of main axis line.
			*
			* `oooo oooo ---- ---- ---- ---- ---- ----`
			@type{Boolean}
			*/alignStart:{type:Boolean,value:!1,reflectToAttribute:!0},/** Child elements are packed toward the end of main axis line.
			*
			* `---- ---- ---- ---- ---- ---- oooo oooo oooo`
			@type{Boolean}
			*/alignEnd:{type:Boolean,value:!1,reflectToAttribute:!0},/** Child elements are centered along the main axis line.
			*
			* `---- ---- ---- oooo oooo oooo ---- ---- ----`
			@type{Boolean}
			*/alignCenter:{type:Boolean,value:!1,reflectToAttribute:!0},/** Child elements are evenly distributed in the main axis line. First item is on the start line, last item on the end line.
			*
			* `oooo ---- ---- ---- oooo ---- ---- ---- oooo`
			@type{Boolean}
			*/alignSpaceBetween:{type:Boolean,value:!1,reflectToAttribute:!0},/** Child elements are evenly distributed in the main axis line with equal space around them.
			*
			* `---- oooo ---- oooo ---- oooo ----`
			@type{Boolean}
			*/alignSpaceAround:{type:Boolean,value:!1,reflectToAttribute:!0},/** Child elements are packed toward the start of cross axis line.
			@type{Boolean}
			*/crossAlignStart:{type:Boolean,value:!1,reflectToAttribute:!0},/** Child element are packed toward the end of cross axis line.
			@type{Boolean}
			*/crossAlignEnd:{type:Boolean,value:!1,reflectToAttribute:!0},/** Child element are centered along the cross axis line.
			@type{Boolean}
			*/crossAlignCenter:{type:Boolean,value:!1,reflectToAttribute:!0},/** Stretches child element to fill the container in the cross axis direction.
			@type{Boolean}
			*/crossAlignStretch:{type:Boolean,value:!1,reflectToAttribute:!0},/** Child items are aligned such as their baselines align in the cross axis direction.
			@type{Boolean}
			*/crossAlignBaseline:{type:Boolean,value:!1,reflectToAttribute:!0}}}connectedCallback(){super.connectedCallback();let slot=this.shadowRoot.querySelector("slot");this._observer=new FlattenedNodesObserver(slot,info=>{for(let i=0;i<info.addedNodes.length;i++){if(1==info.addedNodes[i].nodeType){this._flex(info.addedNodes[i]);this._selfAlign(info.addedNodes[i])}info.addedNodes[i].classList.remove("beruang-hide")}})}disconnectedCallback(){super.disconnectedCallback();this._observer.disconnect()}_flex(el){let style="flex-auto",num,flex=el.getAttribute("data-flex");switch(flex){case"none":style="flex-none";break;case"auto":style="flex-auto";break;default:num=parseInt(flex,10);if(!isNaN(num)&&1<=num&&10>=num){style="flex-"+num}break;}el.classList.add(style)}_selfAlign(el){let align=el.getAttribute("data-self-align");switch(align){case"start":case"end":case"center":case"stretch":case"baseline":el.classList.add("self-align-"+align);break;default:break;}}};export const PolarSimpleBehavior=dedupingMixin(internalPolarSimpleBehavior);