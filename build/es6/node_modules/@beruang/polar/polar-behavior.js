/**
@license
Copyright (c) 2019 The Beruang Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
https://github.com/DatatransInformatika/beruang/blob/master/LICENSE.txt The complete set of authors may be found at
https://github.com/DatatransInformatika/beruang/blob/master/AUTHORS.txt The complete set of contributors may be
found at https://github.com/DatatransInformatika/beruang/blob/master/CONTRIBUTORS.txt
*/import{dedupingMixin}from"../../@polymer/polymer/lib/utils/mixin.js";import{FlattenedNodesObserver}from"../../@polymer/polymer/lib/utils/flattened-nodes-observer.js";/**
`PolarBehavior`
@polymerBehavior PolarBehavior
*/let internalPolarBehavior=base=>class extends base{static get properties(){return{/** Does not wrap child element overflows in main axis direction.
			@type{Boolean}
			*/noWrap:{type:Boolean,value:!1,reflectToAttribute:!0},/** Shows overflowed child element portion in horizontal direction.
			@type{Boolean}
			*/overflowXVisible:{type:Boolean,value:!1,reflectToAttribute:!0},/** Hides overflowed child element portion in horizontal direction.
			@type{Boolean}
			*/overflowXHidden:{type:Boolean,value:!1,reflectToAttribute:!0},/** Always shows horizontal scroller.
			@type{Boolean}
			*/overflowXScroll:{type:Boolean,value:!1,reflectToAttribute:!0},/** Only shows horizontal scroller when child element overflows.
			@type{Boolean}
			*/overflowXAuto:{type:Boolean,value:!1,reflectToAttribute:!0},/** Shows overflowed child element portion in vertical direction.
			@type{Boolean}
			*/overflowYVisible:{type:Boolean,value:!1,reflectToAttribute:!0},/** Hides overflowed child element portion in vertical direction.
			@type{Boolean}
			*/overflowYHidden:{type:Boolean,value:!1,reflectToAttribute:!0},/** Always shows vertical scroller.
			@type{Boolean}
			*/overflowYScroll:{type:Boolean,value:!1,reflectToAttribute:!0},/** Only shows vertical scroller when child element overflows.
			@type{Boolean}
			*/overflowYAuto:{type:Boolean,value:!1,reflectToAttribute:!0}}}};export const PolarBehavior=dedupingMixin(internalPolarBehavior);