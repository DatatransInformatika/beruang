/**
@license
Copyright (c) 2019 The Beruang Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
https://github.com/DatatransInformatika/beruang/blob/master/LICENSE.txt The complete set of authors may be found at
https://github.com/DatatransInformatika/beruang/blob/master/AUTHORS.txt The complete set of contributors may be
found at https://github.com/DatatransInformatika/beruang/blob/master/CONTRIBUTORS.txt
*/import{dedupingMixin}from"../../../@polymer/polymer/lib/utils/mixin.js";/**
`BrownResizeMonitorBehavior`
@polymerBehavior BrownResizeMonitorBehavior
*/let internalBrownResizeMonitorBehavior=base=>class extends base{ready(){super.ready();let el=this.shadowRoot.querySelector("slot[name=\"resizemonitor\"]");if(!el){////append slot as shadow DOM
let slot=document.createElement("slot");slot.setAttribute("name","resizemonitor");this.shadowRoot.appendChild(slot)}////append iframe to light DOM
let iframe=document.createElement("iframe");iframe.position="absolute";iframe.top="0px";iframe.right="0px";iframe.bottom="0px";iframe.left="0px";iframe.width="100%";iframe.height="100%";iframe.style.zIndex=-999;iframe.style.visibility="hidden";iframe.setAttribute("slot","resizemonitor");this.appendChild(iframe);let f=e=>{this._onResizeMonitor(e)};iframe.contentWindow.addEventListener("resize",f)}_onResizeMonitor(event){throw new ReferenceError("_onResizeMonitor must be implemented by child class")}};export const BrownResizeMonitorBehavior=dedupingMixin(internalBrownResizeMonitorBehavior);