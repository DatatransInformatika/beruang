/**
@license
Copyright (c) 2019 The Beruang Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
https://github.com/DatatransInformatika/beruang/blob/master/LICENSE.txt The complete set of authors may be found at
https://github.com/DatatransInformatika/beruang/blob/master/AUTHORS.txt The complete set of contributors may be
found at https://github.com/DatatransInformatika/beruang/blob/master/CONTRIBUTORS.txt
*/import{dedupingMixin}from"../../../@polymer/polymer/lib/utils/mixin.js";import"./brown-mask.js";/**
`BrownMaskBehavior`
@polymerBehavior BrownMaskBehavior
*/let internalBrownMaskBehavior=base=>class extends base{static get properties(){return{mask:{type:Boolean,value:!1},maskMessage:{type:String}}}static get observers(){return["_onMask(mask, maskMessage)"]}_onMask(mask,message){let maskEl=this.querySelector("brown-mask");if(mask){if(!maskEl){maskEl=document.createElement("brown-mask");this.appendChild(maskEl)}maskEl.message=message}else{if(maskEl){this.removeChild(maskEl)}}}};export const BrownMaskBehavior=dedupingMixin(internalBrownMaskBehavior);