/**
@license
Copyright (c) 2019 The Beruang Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
https://github.com/DatatransInformatika/beruang/blob/master/LICENSE.txt The complete set of authors may be found at
https://github.com/DatatransInformatika/beruang/blob/master/AUTHORS.txt The complete set of contributors may be
found at https://github.com/DatatransInformatika/beruang/blob/master/CONTRIBUTORS.txt
*/import{dedupingMixin}from"../../../@polymer/polymer/lib/utils/mixin.js";import"./brown-mask.js";/**
`BrownMaskBehavior`
@polymerBehavior BrownMaskBehavior
*/let internalBrownMaskBehavior=base=>class extends base{static get properties(){return{/** Show masker.
			@type{Boolean}
			*/mask:{type:Boolean,value:!1},/** Masker label.
			@type{String}
			*/maskMessage:{type:String}}}static get observers(){return["_onMask(mask, maskMessage)"]}_onMask(mask,message){if(mask){if(!this._masker){this._masker=document.createElement("brown-mask");this.appendChild(this._masker)}this._masker.message=message}else{if(this._masker){this.removeChild(this._masker);delete this._masker}}}};export const BrownMaskBehavior=dedupingMixin(internalBrownMaskBehavior);