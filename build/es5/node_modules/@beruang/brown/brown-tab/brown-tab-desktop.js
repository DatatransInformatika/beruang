define(["../../../@polymer/polymer/polymer-element.js","../../../@polymer/polymer/lib/mixins/gesture-event-listeners.js","../../../@polymer/iron-flex-layout/iron-flex-layout.js","../../../@webcomponents/shadycss/entrypoints/apply-shim.js","../../beruang-behavior.js","../brown-behavior.js","../brown-mask/brown-mask-behavior.js","../brown-resizemonitor/brown-resizemonitor-behavior.js","./brown-tab-behavior.js","./brown-tab-style.js"],function(_polymerElement,_gestureEventListeners,_ironFlexLayout,_applyShim,_beruangBehavior,_brownBehavior,_brownMaskBehavior,_brownResizemonitorBehavior,_brownTabBehavior,_brownTabStyle){"use strict";function _templateObject_4524fe40af4411e98c5f038b2aced94e(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style  include=\"brown-tab-style\">\n        :host > #content > ::slotted([slot=content]) {\n          display:none;\n        }\n        /*content ada di dlm slot ditampilkan jika ada .content-active*/\n        :host > #content > ::slotted(.content-active) {\n          display:block;/*membatalkan display none*/\n        }\n      </style>\n      <div id=\"header\">\n        <iron-icon icon=\"chevron-left\" id=\"pre-scroll\" class=\"scroller\" on-tap=\"_preScroll\"></iron-icon>\n        <div id=\"header-item\"><slot id=\"header-slot\" name=\"header\"></slot></div>\n        <iron-icon icon=\"chevron-right\" id=\"post-scroll\" class=\"scroller\" on-tap=\"_postScroll\"></iron-icon>\n      </div>\n      <div id=\"content\"><slot name=\"content\"></slot></div>\n    "]);_templateObject_4524fe40af4411e98c5f038b2aced94e=function _templateObject_4524fe40af4411e98c5f038b2aced94e(){return data};return data}/**
`brown-tab-desktop` is static tab panel element.
@customElement
@polymer
*/var BrownTabDesktop=/*#__PURE__*/function(_BrownTabBehavior){babelHelpers.inherits(BrownTabDesktop,_BrownTabBehavior);function BrownTabDesktop(){babelHelpers.classCallCheck(this,BrownTabDesktop);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(BrownTabDesktop).apply(this,arguments))}babelHelpers.createClass(BrownTabDesktop,[{key:"_onTabClosing",value:function _onTabClosing(tabItem){//1. pindahkan status aktif ke tabItem lain (jika ada)
if(tabItem.active){//if closing tabitem is active then set other to active
var other=this._getTabItemSibling(tabItem,null/*no criteria*/);//cari sibling tanpa periksa aktif atau tidak
if(other){//jika ada
other.active=!0;//pindahkan status active ke tabItem lain
}}//if(tabItem.active)
//2. remove content (jika ada)
var content=this._getContentByDataTab(tabItem.id);//ambil content
if(content){//jika ada
this.removeChild(content);//remove content
}//3. remove tabItem
this.removeChild(tabItem);//remove tabItem
}},{key:"_onTabActiving",value:function _onTabActiving(tabItem){//1. cari tabItem lain yang berstatus aktif, jika ada maka batalkan status aktif
var callback=function callback(sibling){//callback akan dikirimkan ke fungsi _getTabItemSibling
return!0==sibling.active;//syarat sibling: aktif
},other=this._getTabItemSibling(tabItem,callback);//callback sudah dikirimkan ke fungsi _getTabItemSibling
//other -> sibling
if(other){other.active=!1;//matikan tab lain yang statusnya aktif(mengalami _activeChanged)
}//mengatifkan tab, nonaktifkan tab lain: END
//aktifkan tab yang di-klik: START
//2. set status active tabItem menjadi true
tabItem.active=!0;//properti tabitem desktop menjadi aktif(mengalami _activeChanged)
}},{key:"_onTabActiveChanged",value:function _onTabActiveChanged(tabItem,active){var content=this._getContentByDataTab(tabItem.id);//tabItem.id "item1", "item2", "item3", etc...
if(!content){//ambil content yg data-tab == tabItem.id
return;//kalau content tidak ada,langsung keluar dr program
}if(active){///////////e.detail.active == true, tambahkan class content-active dr Index.html
content.classList.add("content-active");//display:block
}else{///////////e.detail.active == false, hapus class content-active dr Index.html
content.classList.remove("content-active");//display:none
}}},{key:"_getContentByDataTab",value:function _getContentByDataTab(tabId){//v
var fCheck=function fCheck(el){var data="BROWN-TABITEM-DESKTOP"!=el.nodeName?el.getAttribute("data-tab"):null;//nyari tag konten
return tabId==data};return this._getLightDOM(this.lastElementChild,!1,fCheck)}},{key:"_onResizeMonitor",value:function _onResizeMonitor(event){this._evaluateScroll()}}],[{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_4524fe40af4411e98c5f038b2aced94e())}}]);return BrownTabDesktop}((0,_brownTabBehavior.BrownTabBehavior)((0,_brownResizemonitorBehavior.BrownResizeMonitorBehavior)((0,_brownMaskBehavior.BrownMaskBehavior)(//syarat masking 1
(0,_brownBehavior.BrownBehavior)((0,_beruangBehavior.BeruangBehavior)((0,_gestureEventListeners.GestureEventListeners)(_polymerElement.PolymerElement)))))));window.customElements.define("brown-tab-desktop",BrownTabDesktop)});