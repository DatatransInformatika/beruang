define(["exports","../../../@polymer/polymer/lib/utils/mixin.js","./brown-mask.js"],function(_exports,_mixin,_brownMask){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.BrownMaskBehavior=void 0;/**
@license
Copyright (c) 2019 The Beruang Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
https://github.com/DatatransInformatika/beruang/blob/master/LICENSE.txt The complete set of authors may be found at
https://github.com/DatatransInformatika/beruang/blob/master/AUTHORS.txt The complete set of contributors may be
found at https://github.com/DatatransInformatika/beruang/blob/master/CONTRIBUTORS.txt
*/ /**
`BrownMaskBehavior`
@polymerBehavior BrownMaskBehavior
*/var internalBrownMaskBehavior=function internalBrownMaskBehavior(base){return(/*#__PURE__*/function(_base){babelHelpers.inherits(_class,_base);function _class(){babelHelpers.classCallCheck(this,_class);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(_class).apply(this,arguments))}babelHelpers.createClass(_class,[{key:"_onMask",value:function _onMask(mask,message){var maskEl=this.querySelector("brown-mask");if(mask){if(!maskEl){maskEl=document.createElement("brown-mask");this.appendChild(maskEl)}maskEl.message=message}else{if(maskEl){this.removeChild(maskEl)}}}}],[{key:"properties",get:function get(){return{mask:{type:Boolean,value:!1},maskMessage:{type:String}}}},{key:"observers",get:function get(){return["_onMask(mask, maskMessage)"]}}]);return _class}(base))},BrownMaskBehavior=(0,_mixin.dedupingMixin)(internalBrownMaskBehavior);_exports.BrownMaskBehavior=BrownMaskBehavior});