define(["../iron-location/iron-location.js","../marked-element/marked-element.js","../polymer/polymer-legacy.js","../prism-element/prism-highlighter.js","../prism-element/prism-theme-default.js","./iron-doc-behavior.js","./iron-doc-class.js","./iron-doc-demo.js","./iron-doc-element.js","./iron-doc-mixin.js","./iron-doc-namespace.js","../polymer/lib/legacy/polymer-fn.js","../polymer/lib/legacy/polymer.dom.js","../polymer/lib/utils/html-tag.js"],function(_ironLocation,_markedElement,_polymerLegacy,_prismHighlighter,_prismThemeDefault,_ironDocBehavior,_ironDocClass,_ironDocDemo,_ironDocElement,_ironDocMixin,_ironDocNamespace,_polymerFn,_polymerDom,_htmlTag){"use strict";function _templateObject_115c4ab0ad5411e9a537cb1a95af6fbc(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style include=\"iron-doc-viewer-styles prism-theme-default\">\n      iron-doc-demo {\n        height: 100%;\n      }\n    </style>\n\n    <iron-location path=\"{{_urlPath}}\" hash=\"{{_urlHash}}\"></iron-location>\n\n    <template is=\"dom-if\" if=\"[[_equal(_descriptorType,'demos')]]\" restamp>\n      <iron-doc-demo class=\"active\" demo=\"[[_demo]]\" src-prefix=\"[[demoSrcPrefix]]\" title=\"{{title}}\">\n      </iron-doc-demo>\n    </template>\n\n    <template is=\"dom-if\" if=\"[[_equal(_descriptorType,'namespaces')]]\" restamp>\n      <iron-doc-namespace class=\"active\" descriptor=\"[[_currentDescriptor]]\" fragment-prefix=\"[[_fragmentPrefix]]\" title=\"{{title}}\" base-href=\"[[baseHref]]\">\n      </iron-doc-namespace>\n    </template>\n\n    <template is=\"dom-if\" if=\"[[_equal(_descriptorType,'elements')]]\" restamp>\n      <iron-doc-element class=\"active\" descriptor=\"[[_currentDescriptor]]\" fragment-prefix=\"[[_fragmentPrefix]]\" title=\"{{title}}\" base-href=\"[[baseHref]]\">\n      </iron-doc-element>\n    </template>\n\n    <template is=\"dom-if\" if=\"[[_equal(_descriptorType,'mixins')]]\" restamp>\n      <iron-doc-mixin class=\"active\" descriptor=\"[[_currentDescriptor]]\" fragment-prefix=\"[[_fragmentPrefix]]\" title=\"{{title}}\" base-href=\"[[baseHref]]\">\n      </iron-doc-mixin>\n    </template>\n\n    <template is=\"dom-if\" if=\"[[_equal(_descriptorType,'behaviors')]]\" restamp>\n      <iron-doc-behavior class=\"active\" descriptor=\"[[_currentDescriptor]]\" fragment-prefix=\"[[_fragmentPrefix]]\" title=\"{{title}}\" base-href=\"[[baseHref]]\">\n      </iron-doc-behavior>\n    </template>\n\n    <template is=\"dom-if\" if=\"[[_equal(_descriptorType,'classes')]]\" restamp>\n      <iron-doc-class class=\"active\" descriptor=\"[[_currentDescriptor]]\" fragment-prefix=\"[[_fragmentPrefix]]\" title=\"{{title}}\" base-href=\"[[baseHref]]\">\n      </iron-doc-class>\n    </template>\n"]);_templateObject_115c4ab0ad5411e9a537cb1a95af6fbc=function _templateObject_115c4ab0ad5411e9a537cb1a95af6fbc(){return data};return data}/*
`iron-doc-viewer` renders documentation about elements, mixins, classes, and
more from a JSON descriptor output by
[Polymer Analyzer](https://github.com/Polymer/polymer-analyzer).

Provide the descriptor JSON as a data binding to `descriptor`:

    <iron-doc-viewer descriptor="[[descriptor]]"></iron-doc-viewer>

`iron-doc-viewer` will initially display all items contained in the given
descriptor (e.g. elements, mixins, classes). `path` is used to display detail
about specific items within the descriptor (e.g. "/elements/my-component"), and
by default is bound to the current `window.location` path.

### Styling

Most users should include the default theme alongside this element:

    <script type="module">
      import '@polymer/iron-doc-viewer/default-theme.js';
    </script>

    <custom-style>
      <style is="custom-style" include="iron-doc-default-theme"></style>
    </custom-style>

The following custom properties and mixins are available for styling:

Custom property | Description | Default
----------------|-------------|----------
`--iron-doc-font-code` | Mixin applied to code snippets. | `{}`
`--iron-doc-font-body` | Mixin applied to non-code text. | `{}`
*/(0,_polymerFn.Polymer)({_template:(0,_htmlTag.html)(_templateObject_115c4ab0ad5411e9a537cb1a95af6fbc()),is:"iron-doc-viewer",properties:{/**
     * The [Polymer
     * Analyzer](https://github.com/Polymer/polymer-analyzer)-generated
     * element descriptor to display details for.
     */descriptor:{type:Object},/**
     * By default all routing is performed using the URL fragment
     * (e.g. `docs.html#/elements/my-element`).
     *
     * If your server supports it and you would like to use the real URL
     * path instead (e.g. `/api/docs/elements/my-element`), set this to
     * the base path where the page is mounted, omitting the trailing
     * slash (e.g. `/api/docs` or *empty string* for the root path).
     */baseHref:{type:String,value:"#"},/**
     * URL prefix for demo iframes.
     */demoSrcPrefix:String,/**
     * Path to the item in the descriptor to display.
     *
     * Examples:
     *   - `/` for the root namespace
     *   - `/elements/paper-button`
     *   - `/mixins/paper-button-behavior`
     *
     * Defaults to the current `window.location` path.
     *
     * If `baseHref` is set, it will be trimmed from the prefix of this
     * `path`.
     */path:{type:String,notify:!0,value:null},/**
     * Instead of displaying items relative to the top level of
     * `descriptor`, start from this namespace.
     */rootNamespace:{type:String},/**
     * Display title for the currently selected item.
     * @type {string}
     */title:{type:String,notify:!0},/**
     * True if the viewer is currently displaying a demo.
     */demo:{type:Boolean,computed:"_computeDemo(_demo)",reflectToAttribute:!0,notify:!0},_descriptorType:String,_urlPath:String,_urlHash:String,_currentDescriptor:Object,_fragmentPrefix:String,_scrollTo:String,_demo:Object},observers:["_routingChanged(baseHref, _urlPath, _urlHash)","_dataChanged(descriptor, path, _scrollTo)"],_equal:function _equal(a,b){return a==b},_computeDemo:function _computeDemo(demo){return!!demo},_routingChanged:function _routingChanged(baseHref,urlPath,urlHash){if(0===baseHref.indexOf("#")){// URL fragment routing.
var parts=(urlHash||"").split("#");this.path=parts[0];this._scrollTo=parts[1]||null;this._fragmentPrefix=parts[0]+"#"}else{// URL path routing.
if(baseHref&&urlPath&&0===urlPath.indexOf(baseHref)){this.path=urlPath.substring(baseHref.length)}else{this.path=urlPath}this._scrollTo=urlHash}},_dataChanged:function _dataChanged(descriptor,path,scrollAnchor){if(!this.descriptor){this._descriptorType=null;return}if(!path||"/"===path){if(this.rootNamespace){this.path="/namespaces/"+this.rootNamespace}else{this._descriptorType="namespaces";this._currentDescriptor=descriptor}return}var descriptorType,name,demoName;if(this.baseHref&&0<=path.indexOf(this.baseHref)){path=path.substring(this.baseHref.length)}var parts=path.split("/");if(1<parts.length){descriptorType=parts[1];name=parts[2]}if(3<parts.length&&"demos"===parts[3]){demoName=parts.slice(4).join("/")}var namespace=getNamespace(this.descriptor,name)||this.descriptor;if(null==namespace){// 404?
return}this._descriptorType=descriptorType;if("namespaces"===descriptorType){this._currentDescriptor=namespace.namespaces&&namespace.namespaces.filter(function(n){return n.name===name})[0]}else if("elements"===descriptorType){this._currentDescriptor=namespace.elements&&namespace.elements.filter(function(e){return e.name===name||e.tagname===name})[0]}else if("classes"===descriptorType){this._currentDescriptor=namespace.classes&&namespace.classes.filter(function(e){return(e.name||e.tagname)===name})[0]}else if("mixins"===descriptorType){this._currentDescriptor=namespace.mixins&&namespace.mixins.filter(function(m){return m.name===name})[0]}else if("behaviors"===descriptorType){var behaviors=((namespace.metadata||{}).polymer||{}).behaviors;this._currentDescriptor=behaviors&&behaviors.filter(function(b){return b.name===name})[0]}else if("functions"===descriptorType){this._currentDescriptor=namespace.functions&&namespace.functions.filter(function(f){return f.name===name})[0]}this._demo=null;if(demoName&&this._currentDescriptor&&this._currentDescriptor.demos){for(var i=0;i<this._currentDescriptor.demos.length;i++){var demo=this._currentDescriptor.demos[i],shortName=demo.description&&demo.description.toLowerCase().replace(/\s+/g,"-");if(demo.url===demoName||shortName&&shortName===demoName){this._demo=demo;this._descriptorType="demos";break}}}this.fire("view-changed");if(scrollAnchor){(0,_polymerDom.flush)();var active=this.$$(".active");if(active&&active.scrollToAnchor){active.scrollToAnchor(scrollAnchor)}}}/**
   * Fired when the active view changes.
   * @event view-changed
   */});/**
 * Walks through the tree of namespaces to find the namespace containing
 * `name`.
 */function getNamespace(descriptor,name){var parts=name.split(".");if(2>parts.length){return void 0}parts=parts.slice(0,parts.length-1);for(var namespace=descriptor,i=0;i<parts.length;i++){if(!namespace.namespaces){return void 0}var matches=namespace.namespaces.filter(function(n){return n.name===parts[i]});if(0===matches.length){return void 0}namespace=matches[0]};return namespace}});